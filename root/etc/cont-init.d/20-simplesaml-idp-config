#!/usr/bin/with-contenv bash

#base setup
cfgroot="/config"
pkgname="simplesamlphp"
pkgcfgroot="$cfgroot/$pkgname"


function copy_default_files {
local src="$1"
local tgt="$2"
for fyle in $(ls -1 $src)
do
	if [[ ! -f ${tgt}/${fyle} ]] 
	then
		echo cp ${src}/${fyle} ${tgt}/${fyle} 
		cp ${src}/${fyle} ${tgt}/${fyle} 
	else
		echo ${tgt}/${fyle} exists skipping copy from ${src}/${fyle}
	fi
done
}

function replace_in_file {
local cfgfile="$1"
local pattern="$2"
local newpattern="$3"
if grep -q "$pattern" "$cfgfile"
then
 	echo Found Pattern $pattern in file $cfgfile 
	echo Changing $pattern to $newpattern in $cfgfile
	local pattesc=$(echo $pattern | sed 's_/_\\/_g')
	local newesc=$(echo $newpattern | sed 's_/_\\/_g')
	perl -pi -e "s/$pattesc/$newesc/"  $cfgfile
fi
}


# Set baseurlpath for reverse proxy etc
[[ ! -z "$BASEURLPATH" ]] && { 
	cfgfile="$pkgcfgroot/config/config.php"
	pattern="'baseurlpath' => 'simplesaml/',"
	newpattern="'baseurlpath' => '$BASEURLPATH',"
	replace_in_file "$cfgfile" "$pattern" "$newpattern"
}

# Create default server key for simplesaml if it does not exist
SUBJECT="/C=GB/O=webscale/OU=devs/CN=*"
if [[ -f $pkgcfgroot/cert/server.key && -f $pkgcfgroot/cert/server.crt ]]; then
echo "using keys found in $pkgcfgroot/cert/"
else
echo "generating self-signed keys in $pkgcfgroot/cert/, you can replace these with your own keys if required"
openssl req -newkey rsa:3072 -new -x509 -days 3652 -nodes -out $pkgcfgroot/cert/server.crt -keyout $pkgcfgroot/cert/server.key -subj "$SUBJECT" 
fi

# enable saml idp functions if required
# Set non standard secret salt if required                                                                             
cfgfile="$pkgcfgroot/config/config.php"                                                                                
pattern="'enable.saml20-idp' => false,"
newpattern="'enable.saml20-idp' => true,"
replace_in_file "$cfgfile" "$pattern" "$newpattern"              


# permissions
chown -R abc:abc \
	/config 
chmod -R g+w \
	$pkgcfgroot	
